#TARGET_EXEC ?= a.out

BUILD_DIR ?= ./build
LIB_DIR  ?= ./lib
SRC_DIRS ?= ./src

SRCS := $(shell find $(SRC_DIRS) -name *.cpp -or -name *.c -or -name *.s)
OBJS := $(SRCS:%=$(BUILD_DIR)/%.o)
DEPS := $(OBJS:.o=.d)
LDFLAGS := -llua5.3
CFLAGS  := -fPIC

INC_DIRS := $(shell find $(SRC_DIRS) -type d) ext/
INC_FLAGS := $(addprefix -I,$(INC_DIRS))

CPPFLAGS ?= $(INC_FLAGS) -MMD -MP

lib/libds.so: $(OBJS)
	$(MKDIR_P) $(LIB_DIR)
	$(CC) $(CFLAGS) $(OBJS) -shared -o lib/libds.so $(LDFLAGS)

#$(BUILD_DIR)/$(TARGET_EXEC): $(OBJS)
	#$(CC) $(OBJS) -o $@ $(LDFLAGS)

# assembly
$(BUILD_DIR)/%.s.o: %.s
	$(MKDIR_P) $(dir $@)
	$(AS) $(ASFLAGS) -c $< -o $@

# c source
$(BUILD_DIR)/%.c.o: %.c
	$(MKDIR_P) $(dir $@)
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

# c++ source
$(BUILD_DIR)/%.cpp.o: %.cpp
	$(MKDIR_P) $(dir $@)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@


.PHONY: clean

clean:
	$(RM) -r $(BUILD_DIR) $(LIB_DIR)

-include $(DEPS)

MKDIR_P ?= mkdir -p

