SRCS       = $(wildcard src/*.c)
OBJS       = $(SRCS:src/%.c=obj/%.o)
OBJS      += $(SPELL_OBJS)
OBJS      += obj/spng.o
DEPS       = $(wildcard src/*.h)
POWER_LIB  = src/powers/obj/*
ALL_SOURCES := $(shell find src/ -name '*.c')
TEST_OBJS  = $(SRCS:src/%.c=obj-test/%.o)
TEST_OBJS  += $(SPELL_OBJS)
TEST_OBJS  += obj/spng.o
CFLAGS    += -ggdb -fsanitize=address -fno-omit-frame-pointer 

.PRECIOUS: *.o
.SECONDARY: $(TEST_OBJS)

all: obj $(EXEC) libds.so

.PHONY: POWERS

libds.so: obj obj/spells $(OBJS) libxmimidi.so POWERS
	$(CC) -L./ $(CFLAGS) $(OBJS) $(POWER_LIB) -shared -o libds.$(LIB_EXT) -llua5.3 -lxmimidi

POWERS:
	cd src/powers ; CC="$(CC)" CFLAGS="-O2" make

libxmimidi.so:
	$(CC) ext/xmi2mid.c -shared -o libxmimidi.$(LIB_EXT)

obj-test:
	mkdir -p obj-test

obj/spng.o : obj ext/spng/spng.c ext/spng/spng.h
	$(CC) -c $(CFLAGS) -I ext/spng/ ext/spng/spng.c -o obj/spng.o

obj/%.o : src/%.c $(DEPS)
	$(CC) -c $(CFLAGS) $< -o $@

obj-test/%.o: src/%.c $(DEPS)
	$(CC) $(COVFLAGS) -g -I ext/ -fprofile-arcs -ftest-coverage -c $< -o $@

obj/spells:
	mkdir -p obj/spells

obj:
	mkdir -p obj

tools: gff-inspector

gff-inspector: $(OBJS) tools/gff-inspector.c
	$(CC) $(CFLAGS) $(OBJS) tools/gff-inspector.c -o gff-inspector

bin:
	mkdir -p bin

coverage:
	mkdir -p coverage

%test: bin libxmimidi.so coverage $(TEST_OBJS) obj-test POWERS
	$(CC) $(COVFLAGS) -I ext/ -I src/ obj-test/*.o src/powers/obj/* test/$@.c test/base.c test/unity.c -o bin/$@ -L ./ -llua5.3 -lxmimidi obj/spng.o -lm -lz
	LD_LIBRARY_PATH=./ bin/$@
	lcov --quiet --capture --directory ./ --output-file coverage/$@.info
	rm *gcno *gcda

engine_clean:
	cd src/powers ; make clean
	rm -rf $(EXEC) obj gff-inspector libds.$(LIB_EXT) libxmimidi.$(LIB_EXT) bin/ mdark mdark.exe *dll

flip:
	ls imgs/ | xargs -I {} convert imgs/{} -flip imgs/{}

coverage/base-test.info: bin libxmimidi.so coverage $(TEST_OBJS) obj-test POWERS
	$(CC) $(COVFLAGS) -I ext/ -I src/ obj-test/*.o src/powers/obj/* test/base-test.c test/base.c test/unity.c -o bin/base-test -L ./ -llua5.3 -lxmimidi obj/spng.o -lm -lz
	LD_LIBRARY_PATH=./ bin/base-test
	lcov --capture --directory ./ --output-file coverage/base-test.info
	rm *gcno *gcda

report: coverage/base-test.info
	genhtml -b coverage/base-test.info coverage/*info --output-directory out
