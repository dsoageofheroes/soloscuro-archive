SRCS       = $(wildcard src/*.c)
OBJS       = $(SRCS:src/%.c=obj/%.o)
OBJS      += $(SPELL_OBJS)
OBJS      += obj/spng.o
DEPS       = $(wildcard src/*.h)
POWER_LIB  = src/powers/obj/*
ALL_SOURCES := $(shell find src/ -name '*.c')
TEST_OBJS  = $(SRCS:src/%.c=obj-test/%.o)

.PRECIOUS: *.o

all: obj $(EXEC) libds.so

.PHONY: POWERS

libds.so: obj obj/spells $(OBJS) libxmimidi.so POWERS
	$(CC) -L./ $(OBJS) $(POWER_LIB) -shared -o libds.$(LIB_EXT) -llua5.3 -lxmimidi

POWERS:
	cd src/powers ; CC="$(CC)" CFLAGS="-O2" make

libxmimidi.so:
	$(CC) ext/xmi2mid.c -shared -o libxmimidi.$(LIB_EXT)

obj-test:
	mkdir -p obj-test

obj/spng.o : ext/spng/spng.c ext/spng/spng.h
	$(CC) -c $(CFLAGS) -I ext/spng/ ext/spng/spng.c -o obj/spng.o

obj/%.o : src/%.c $(DEPS)
	$(CC) -c $(CFLAGS) $< -o $@

obj-test/%.o: src/%.c $(DEPS)
	$(CC) -I ext/ -fprofile-arcs -ftest-coverage -c $< -o $@

obj/spells:
	mkdir -p obj/spells

obj:
	mkdir -p obj

tools: gff-inspector

gff-inspector: $(OBJS) tools/gff-inspector.c
	$(CC) $(CFLAGS) $(OBJS) tools/gff-inspector.c -o gff-inspector

bin:
	mkdir -p bin

lua-test: libds.so bin
	$(CC) $(CFLAGS) test/lua-test.c -o bin/lua-test -lds -llua5.3

coverage:
	mkdir -p coverage

%test: bin libxmimidi.so coverage $(TEST_OBJS) obj-test
	$(CC) -fprofile-arcs -ftest-coverage -I ext/ -I src/ -g -O2 obj-test/*.o src/powers/obj/*.o test/$@.c test/base.c test/unity.c -o bin/$@ -L ./ -llua5.3 -lxmimidi
	LD_LIBRARY_PATH=./ bin/$@
	mv *gcda coverage/
	mv *gcno coverage/

%test-lua: bin
	LD_LIBRARY_PATH=./ lua5.3 test/$@.lua -v

clean:
	cd src/powers ; make clean
	rm -rf $(EXEC) obj gff-inspector libds.$(LIB_EXT) libxmimidi.$(LIB_EXT) bin/ mdark mdark.exe *dll

flip:
	ls imgs/ | xargs -I {} convert imgs/{} -flip imgs/{}
