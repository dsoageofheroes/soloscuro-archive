#ifndef SOL_KEYCODES
#define SOL_KEYCODES

typedef enum sol_keymod_e {
    SOL_KMOD_NONE = 0x0000,
    SOL_KMOD_LSHIFT = 0x0001,
    SOL_KMOD_RSHIFT = 0x0002,
    SOL_KMOD_LCTRL = 0x0040,
    SOL_KMOD_RCTRL = 0x0080,
    SOL_KMOD_LALT = 0x0100,
    SOL_KMOD_RALT = 0x0200,
    SOL_KMOD_LGUI = 0x0400,
    SOL_KMOD_RGUI = 0x0800,
    SOL_KMOD_NUM = 0x1000,
    SOL_KMOD_CAPS = 0x2000,
    SOL_KMOD_MODE = 0x4000,

    SOL_KMOD_CTRL = SOL_KMOD_LCTRL | SOL_KMOD_RCTRL,
    SOL_KMOD_SHIFT = SOL_KMOD_LSHIFT | SOL_KMOD_RSHIFT,
    SOL_KMOD_ALT = SOL_KMOD_LALT | SOL_KMOD_RALT,
    SOL_KMOD_GUI = SOL_KMOD_LGUI | SOL_KMOD_RGUI
} sol_keymod_t;

// To make life easy for now, we take from SDL2:
typedef enum sol_keycode_e {
    SOLK_UNKNOWN = 0,
    SOLK_RETURN = '\r',
    SOLK_ESCAPE = '\033',
    SOLK_BACKSPACE = '\b',
    SOLK_TAB = '\t',
    SOLK_SPACE = ' ',
    SOLK_EXCLAIM = '!',
    SOLK_QUOTEDBL = '"',
    SOLK_HASH = '#',
    SOLK_PERCENT = '%',
    SOLK_DOLLAR = '$',
    SOLK_AMPERSAND = '&',
    SOLK_QUOTE = '\'',
    SOLK_LEFTPAREN = '(',
    SOLK_RIGHTPAREN = ')',
    SOLK_ASTERISK = '*',
    SOLK_PLUS = '+',
    SOLK_COMMA = ',',
    SOLK_MINUS = '-',
    SOLK_PERIOD = '.',
    SOLK_SLASH = '/',
    SOLK_0 = '0',
    SOLK_1 = '1',
    SOLK_2 = '2',
    SOLK_3 = '3',
    SOLK_4 = '4',
    SOLK_5 = '5',
    SOLK_6 = '6',
    SOLK_7 = '7',
    SOLK_8 = '8',
    SOLK_9 = '9',
    SOLK_COLON = ':',
    SOLK_SEMICOLON = ';',
    SOLK_LESS = '<',
    SOLK_EQUALS = '=',
    SOLK_GREATER = '>',
    SOLK_QUESTION = '?',
    SOLK_AT = '@',
    SOLK_LEFTBRACKET = '[',
    SOLK_BACKSLASH = '\\',
    SOLK_RIGHTBRACKET = ']',
    SOLK_CARET = '^',
    SOLK_UNDERSCORE = '_',
    SOLK_BACKQUOTE = '`',
    SOLK_a = 'a',
    SOLK_b = 'b',
    SOLK_c = 'c',
    SOLK_d = 'd',
    SOLK_e = 'e',
    SOLK_f = 'f',
    SOLK_g = 'g',
    SOLK_h = 'h',
    SOLK_i = 'i',
    SOLK_j = 'j',
    SOLK_k = 'k',
    SOLK_l = 'l',
    SOLK_m = 'm',
    SOLK_n = 'n',
    SOLK_o = 'o',
    SOLK_p = 'p',
    SOLK_q = 'q',
    SOLK_r = 'r',
    SOLK_s = 's',
    SOLK_t = 't',
    SOLK_u = 'u',
    SOLK_v = 'v',
    SOLK_w = 'w',
    SOLK_x = 'x',
    SOLK_y = 'y',
    SOLK_z = 'z',

    SOLK_CAPSLOCK,
    SOLK_F1, SOLK_F2, SOLK_F3, SOLK_F4, SOLK_F5, SOLK_F6, SOLK_F7, SOLK_F8, SOLK_F9, SOLK_F10, SOLK_F11, SOLK_F12,

    SOLK_PRINTSCREEN,
    SOLK_SCROLLLOCK,
    SOLK_PAUSE,
    SOLK_INSERT,
    SOLK_HOME,
    SOLK_PAGEUP,
    SOLK_END,
    SOLK_PAGEDOWN,
    SOLK_RIGHT,
    SOLK_LEFT,
    SOLK_DOWN,
    SOLK_UP,

    SOLK_NUMLOCKCLEAR,
    SOLK_KP_DIVIDE,
    SOLK_KP_MULTIPLY,
    SOLK_KP_MINUS,
    SOLK_KP_PLUS,
    SOLK_KP_ENTER,
    SOLK_KP_1,
    SOLK_KP_2,
    SOLK_KP_3,
    SOLK_KP_4,
    SOLK_KP_5,
    SOLK_KP_6,
    SOLK_KP_7,
    SOLK_KP_8,
    SOLK_KP_9,
    SOLK_KP_0,
    SOLK_KP_PERIOD,
    SOLK_LCTRL,
    SOLK_LSHIFT,
    SOLK_LALT,
    SOLK_LGUI,
    SOLK_RCTRL,
    SOLK_RSHIFT,
    SOLK_RALT,

    SOLK_DELETE = '\177',
} sol_keycode_t;

typedef struct sol_keysym_s {
    sol_keycode_t key;
    sol_keymod_t  mod;
} sol_keysym_t;

#endif
